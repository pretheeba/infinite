#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Linq_sql
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="infiniteDB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertdept(dept instance);
    partial void Updatedept(dept instance);
    partial void Deletedept(dept instance);
    partial void Insertemployee(employee instance);
    partial void Updateemployee(employee instance);
    partial void Deleteemployee(employee instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Linq_sql.Properties.Settings.Default.infiniteDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<dept> depts
		{
			get
			{
				return this.GetTable<dept>();
			}
		}
		
		public System.Data.Linq.Table<employee> employees
		{
			get
			{
				return this.GetTable<employee>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dept")]
	public partial class dept : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _dept_no;
		
		private string _dept_name;
		
		private System.Nullable<int> _budget;
		
		private string _Loc;
		
		private EntitySet<employee> _employees;
		
		private EntitySet<employee> _employees1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondept_noChanging(int value);
    partial void Ondept_noChanged();
    partial void Ondept_nameChanging(string value);
    partial void Ondept_nameChanged();
    partial void OnbudgetChanging(System.Nullable<int> value);
    partial void OnbudgetChanged();
    partial void OnLocChanging(string value);
    partial void OnLocChanged();
    #endregion
		
		public dept()
		{
			this._employees = new EntitySet<employee>(new Action<employee>(this.attach_employees), new Action<employee>(this.detach_employees));
			this._employees1 = new EntitySet<employee>(new Action<employee>(this.attach_employees1), new Action<employee>(this.detach_employees1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dept_no", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int dept_no
		{
			get
			{
				return this._dept_no;
			}
			set
			{
				if ((this._dept_no != value))
				{
					this.Ondept_noChanging(value);
					this.SendPropertyChanging();
					this._dept_no = value;
					this.SendPropertyChanged("dept_no");
					this.Ondept_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dept_name", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string dept_name
		{
			get
			{
				return this._dept_name;
			}
			set
			{
				if ((this._dept_name != value))
				{
					this.Ondept_nameChanging(value);
					this.SendPropertyChanging();
					this._dept_name = value;
					this.SendPropertyChanged("dept_name");
					this.Ondept_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_budget", DbType="Int")]
		public System.Nullable<int> budget
		{
			get
			{
				return this._budget;
			}
			set
			{
				if ((this._budget != value))
				{
					this.OnbudgetChanging(value);
					this.SendPropertyChanging();
					this._budget = value;
					this.SendPropertyChanged("budget");
					this.OnbudgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loc", DbType="NVarChar(20)")]
		public string Loc
		{
			get
			{
				return this._Loc;
			}
			set
			{
				if ((this._Loc != value))
				{
					this.OnLocChanging(value);
					this.SendPropertyChanging();
					this._Loc = value;
					this.SendPropertyChanged("Loc");
					this.OnLocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dept_employee", Storage="_employees", ThisKey="dept_no", OtherKey="dept_no")]
		public EntitySet<employee> employees
		{
			get
			{
				return this._employees;
			}
			set
			{
				this._employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dept_employee1", Storage="_employees1", ThisKey="dept_no", OtherKey="dept_no")]
		public EntitySet<employee> employees1
		{
			get
			{
				return this._employees1;
			}
			set
			{
				this._employees1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_employees(employee entity)
		{
			this.SendPropertyChanging();
			entity.dept = this;
		}
		
		private void detach_employees(employee entity)
		{
			this.SendPropertyChanging();
			entity.dept = null;
		}
		
		private void attach_employees1(employee entity)
		{
			this.SendPropertyChanging();
			entity.dept1 = this;
		}
		
		private void detach_employees1(employee entity)
		{
			this.SendPropertyChanging();
			entity.dept1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.employees")]
	public partial class employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _empid;
		
		private string _empname;
		
		private string _gender;
		
		private System.Nullable<double> _salary;
		
		private System.Nullable<int> _dept_no;
		
		private string _phonenumber;
		
		private EntityRef<dept> _dept;
		
		private EntityRef<dept> _dept1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnempidChanging(int value);
    partial void OnempidChanged();
    partial void OnempnameChanging(string value);
    partial void OnempnameChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnsalaryChanging(System.Nullable<double> value);
    partial void OnsalaryChanged();
    partial void Ondept_noChanging(System.Nullable<int> value);
    partial void Ondept_noChanged();
    partial void OnphonenumberChanging(string value);
    partial void OnphonenumberChanged();
    #endregion
		
		public employee()
		{
			this._dept = default(EntityRef<dept>);
			this._dept1 = default(EntityRef<dept>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int empid
		{
			get
			{
				return this._empid;
			}
			set
			{
				if ((this._empid != value))
				{
					this.OnempidChanging(value);
					this.SendPropertyChanging();
					this._empid = value;
					this.SendPropertyChanged("empid");
					this.OnempidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empname", DbType="VarChar(15)")]
		public string empname
		{
			get
			{
				return this._empname;
			}
			set
			{
				if ((this._empname != value))
				{
					this.OnempnameChanging(value);
					this.SendPropertyChanging();
					this._empname = value;
					this.SendPropertyChanged("empname");
					this.OnempnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(10)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salary", DbType="Float")]
		public System.Nullable<double> salary
		{
			get
			{
				return this._salary;
			}
			set
			{
				if ((this._salary != value))
				{
					this.OnsalaryChanging(value);
					this.SendPropertyChanging();
					this._salary = value;
					this.SendPropertyChanged("salary");
					this.OnsalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dept_no", DbType="Int")]
		public System.Nullable<int> dept_no
		{
			get
			{
				return this._dept_no;
			}
			set
			{
				if ((this._dept_no != value))
				{
					if ((this._dept.HasLoadedOrAssignedValue || this._dept1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondept_noChanging(value);
					this.SendPropertyChanging();
					this._dept_no = value;
					this.SendPropertyChanged("dept_no");
					this.Ondept_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phonenumber", DbType="VarChar(15)")]
		public string phonenumber
		{
			get
			{
				return this._phonenumber;
			}
			set
			{
				if ((this._phonenumber != value))
				{
					this.OnphonenumberChanging(value);
					this.SendPropertyChanging();
					this._phonenumber = value;
					this.SendPropertyChanged("phonenumber");
					this.OnphonenumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dept_employee", Storage="_dept", ThisKey="dept_no", OtherKey="dept_no", IsForeignKey=true)]
		public dept dept
		{
			get
			{
				return this._dept.Entity;
			}
			set
			{
				dept previousValue = this._dept.Entity;
				if (((previousValue != value) 
							|| (this._dept.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dept.Entity = null;
						previousValue.employees.Remove(this);
					}
					this._dept.Entity = value;
					if ((value != null))
					{
						value.employees.Add(this);
						this._dept_no = value.dept_no;
					}
					else
					{
						this._dept_no = default(Nullable<int>);
					}
					this.SendPropertyChanged("dept");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dept_employee1", Storage="_dept1", ThisKey="dept_no", OtherKey="dept_no", IsForeignKey=true)]
		public dept dept1
		{
			get
			{
				return this._dept1.Entity;
			}
			set
			{
				dept previousValue = this._dept1.Entity;
				if (((previousValue != value) 
							|| (this._dept1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dept1.Entity = null;
						previousValue.employees1.Remove(this);
					}
					this._dept1.Entity = value;
					if ((value != null))
					{
						value.employees1.Add(this);
						this._dept_no = value.dept_no;
					}
					else
					{
						this._dept_no = default(Nullable<int>);
					}
					this.SendPropertyChanged("dept1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
